---
kind: pipeline
type: docker
name: update ed-news website

steps:
    - name: restore cache
      image: meltwater/drone-cache:dev
      pull: true
      settings:
        backend: "filesystem"
        restore: true
        cache_key: "volume"
        archive_format: "gzip"
        mount:
          - 'cache'
      volumes:
      - name: cache
        path: /tmp/cache

    - name: fetch feeds
      image: ghcr.io/astral-sh/uv:debian
      commands:
        - mkdir -p cache
        - ln -sf cache/ednews.db ednews.db
        - uv venv --python 3.14
        - uv sync
        - uv run python fetch.py
        - uv run python build.py

    - name: rebuild cache
      image: meltwater/drone-cache:dev
      pull: true
      settings:
        backend: "filesystem"
        rebuild: true
        cache_key: "volume"
        archive_format: "gzip"
        mount:
          - 'cache'
      volumes:
      - name: cache
        path: /tmp/cache

    - name: update server
      image: drillster/drone-rsync
      volumes:
        - name: www_dir
          path: /www
      commands:
        - rsync -rltvzc --delete --omit-dir-times --no-o --no-g build/ /www/

    - name: purge cloudflare cache
      image: curlimages/curl:latest
      environment:
        CF_ZONE_ID:
          from_secret: CF_ZONE_ID
        CF_API_TOKEN:
          from_secret: CF_API_TOKEN
      commands:
        - |
          set -e
          if [ -z "${CF_API_TOKEN}" ] || [ -z "${CF_ZONE_ID}" ]; then
            echo "CF_API_TOKEN or CF_ZONE_ID not set; skipping Cloudflare purge"
            exit 0
          fi
          echo "Purging Cloudflare cache for zone ${CF_ZONE_ID}..."
          response=$(curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" \
            -H "Authorization: Bearer ${CF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}')
          echo "$response"
          echo "$response" | grep -q '"success":true' || (echo "Cloudflare purge failed" && exit 1)
          echo "Cloudflare cache purged."

volumes:
    - name: cache
      host:
        path: /data/drone/cache
    - name: www_dir
      host:
        path: /data/www/ed-news
...
