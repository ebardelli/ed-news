---
kind: pipeline
type: docker
name: update ed-news website

# platform:
#   os: linux
#   arch: arm64

steps:
    - name: restore S3 cache
      image: peakcom/s5cmd:v2.3.0
      commands:
        - /s5cmd --endpoint-url=$AWS_ENDPOINT cp s3://ed-news-cache/ednews.db ednews.db 
      environment:
        AWS_ACCESS_KEY_ID:
          from_secret: garage_access_key
        AWS_SECRET_ACCESS_KEY:
          from_secret: garage_secret_key
        AWS_ENDPOINT: https://s3.ebardelli.com
        AWS_DEFAULT_REGION: garage

    - name: fetch feeds
      image: ghcr.io/astral-sh/uv:debian
      commands:
        - uv sync
        - uv run python main.py fetch
        - uv run python main.py issn-lookup --date-filter-type created --from-date '2025-01-01' --per-journal 100
        - uv run python main.py enrich-crossref --batch 100
        - uv run python main.py embed
        - uv run python main.py build

    - name: S3 sync to garage
      image: peakcom/s5cmd:v2.3.0
      commands:
        - /s5cmd --endpoint-url=$AWS_ENDPOINT cp ednews.db s3://ed-news-cache/
        - /s5cmd --endpoint-url=$AWS_ENDPOINT sync --delete build/ s3://ed-news/
      environment:
        AWS_ACCESS_KEY_ID:
          from_secret: garage_access_key
        AWS_SECRET_ACCESS_KEY:
          from_secret: garage_secret_key
        AWS_ENDPOINT: https://s3.ebardelli.com
        AWS_DEFAULT_REGION: garage

    - name: invalidate-cloudflare-cache
      image: jetrails/drone-cloudflare-caching
      settings:
          api_token:
              from_secret: cloudflare_token
          zone_identifier:
              from_secret: cloudflare_zone_identifier
          action: purge_everything

volumes:
    - name: cache
      host:
        path: /data/drone/cache
...
